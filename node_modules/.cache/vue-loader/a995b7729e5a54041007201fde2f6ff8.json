{"remainingRequest":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/src/components/AddGood.vue?vue&type=template&id=4b6a9004&scoped=true&","dependencies":[{"path":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/src/components/AddGood.vue","mtime":1636308204592},{"path":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/cache-loader/dist/cjs.js","mtime":1602224828112},{"path":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1630859233642},{"path":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/cache-loader/dist/cjs.js","mtime":1602224828112},{"path":"/Users/nikolaysalinder/Desktop/Projects/test-job/test-job2/test-job/node_modules/vue-loader/lib/index.js","mtime":1630859233642}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}